

---

## ðŸ“„ **1. CÃ³digo para `app.py`**
Crea un archivo llamado **`app.py`** en la raÃ­z del proyecto con este contenido:

```python
from flask import Flask, jsonify

app = Flask(__name__)

@app.route('/')
def home():
    return "Â¡Bienvenido a la API Flask en Docker!"

@app.route('/api/data', methods=['GET'])
def get_data():
    data = {
        "message": "Hola desde Flask en Docker",
        "status": "success"
    }
    return jsonify(data)

if __name__ == '__main__':
    app.run(host='0.0.0.0', port=5000)
```

ðŸ“Œ **ExplicaciÃ³n:**
- `@app.route('/')` â†’ Devuelve un mensaje de bienvenida cuando visitas la URL raÃ­z.
- `@app.route('/api/data')` â†’ Devuelve un JSON con un mensaje y un estado.
- `app.run(host='0.0.0.0', port=5000)` â†’ Permite que el servidor Flask acepte conexiones externas dentro del contenedor.

---

## ðŸ“„ **2. Archivo `requirements.txt`**
Crea un archivo **`requirements.txt`** con las dependencias necesarias:

```
flask
```

Si necesitas mÃ¡s paquetes, agrÃ©gales aquÃ­.

---

## ðŸ“„ **3. `Dockerfile`**
Tu **Dockerfile** debe ser asÃ­:

```dockerfile
FROM python:3.9

WORKDIR /app

COPY requirements.txt ./
RUN pip install -r requirements.txt

COPY . .

EXPOSE 5000
CMD ["python", "app.py"]
```

---

## ðŸš€ **4. ConstrucciÃ³n y EjecuciÃ³n con Docker**
### ðŸ”¨ **Construir la imagen**
```sh
docker build -t flask-app .
```

### â–¶ **Ejecutar el contenedor**
```sh
docker run -p 5000:5000 flask-app
```

ðŸ“Œ **Accede a la API en tu navegador o con `curl`:**
- **PÃ¡gina de inicio:** [http://localhost:5000](http://localhost:5000)
- **Ruta JSON:** [http://localhost:5000/api/data](http://localhost:5000/api/data)

### ðŸ”„ **Ejecutar en segundo plano**
```sh
docker run -d -p 5000:5000 flask-app
```

---

## ðŸŽ¯ **Resumen de Archivos del Proyecto**
```
flask-app/
â”‚â”€â”€ Dockerfile
â”‚â”€â”€ app.py
â”‚â”€â”€ requirements.txt
â”‚â”€â”€ .dockerignore
```

---

## ðŸ“„ **5. Archivo `.dockerignore` (Opcional)**
Para evitar copiar archivos innecesarios al contenedor, crea un archivo **`.dockerignore`**:

```
__pycache__/
*.pyc
.env
```
